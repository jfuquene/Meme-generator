{"ast":null,"code":"var _jsxFileName = \"/Users/JohnnyFutbol/post-grad/Meme-generator/meme-generator/src/MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n\n    this.handleTop = event => {\n      this.setState({\n        topText: event.target.value\n      });\n    };\n\n    this.handleBottom = event => {\n      this.setState({\n        bottomText: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const randomNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n      const randomUrl = this.state.allMemeImgs[randomNum].url;\n      this.setState({\n        randomImg: randomUrl\n      });\n    };\n\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(res => {\n      const {\n        memes\n      } = res.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"top-text\",\n          name: \"top-text\",\n          type: \"text\",\n          value: this.state.topText,\n          onChange: this.handleTop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"bottom-text\",\n          name: \"bottom-text\",\n          type: \"text\",\n          value: this.state.bottomText,\n          onChange: this.handleBottom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.randomImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top\",\n          children: this.state.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom\",\n          children: this.state.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/JohnnyFutbol/post-grad/Meme-generator/meme-generator/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","handleTop","event","setState","topText","target","value","handleBottom","bottomText","handleSubmit","preventDefault","randomNum","Math","floor","random","state","allMemeImgs","length","randomUrl","url","randomImg","componentDidMount","fetch","then","res","json","memes","data","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\n\nclass MemeGenerator extends Component {\n    constructor(){\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        \n    }\n\n\n        componentDidMount(){\n            fetch(\"https://api.imgflip.com/get_memes\")\n            .then(res => res.json())\n            .then(res => {\n                const {memes} = res.data\n                this.setState({ allMemeImgs: memes })\n            })\n        }\n\n        handleTop = (event) => {\n            this.setState({\n                topText: event.target.value,\n            })\n        }\n\n        handleBottom = (event) => {\n            this.setState({\n                bottomText: event.target.value\n            })\n        }\n\n        handleSubmit = (event) => {\n            event.preventDefault()\n            const randomNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n            const randomUrl = this.state.allMemeImgs[randomNum].url\n            this.setState({\n                randomImg: randomUrl\n            })\n        }\n\n        render(){\n            return (\n                <div>\n                    <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n                        \n                          <input placeholder=\"top-text\" \n                                 name=\"top-text\" \n                                 type=\"text\" \n                                 value={this.state.topText}\n                                 onChange={this.handleTop}\n                          />  \n                         \n                          <input placeholder=\"bottom-text\" \n                                 name=\"bottom-text\" \n                                 type=\"text\" \n                                 value={this.state.bottomText}\n                                 onChange={this.handleBottom}\n                          />\n                          <button>Generate</button>\n                    </form>\n                    \n                    <div className=\"meme\">\n                        \n                        <img src={this.state.randomImg} alt=\"\" />\n                        <h2 className=\"top\">{this.state.topText}</h2>\n                        <h2 className=\"bottom\">{this.state.bottomText}</h2>\n\n                    </div>\n                </div>\n            )\n        }\n    }\n\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}